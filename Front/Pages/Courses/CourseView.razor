@inherits CourseLogic
@page "/courses/{id:guid}"

@if (Course is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h2>
        Course "@Course.Name"
    </h2>

    <EditForm Model="@Course" OnValidSubmit="@(async () => await EditCourse())">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="list-group list-group-flush">

            <div class="card list-group">
                <div class="card-body">
                    <h5 class="card-title">Name</h5>
                    <div @onclick="@((e) => SetEnabled(e, Property.Name))"
                         @onfocusout="@((e) => SetDisabled(e, Property.Name))">
                        <input id="name"
                               class="card-text form-control"
                               disabled="@IsNameDisabled"
                               value="@Course.Name"
                               @onchange="@((e) => {Course.Name = e.Value.ToString();  SetEditButtonVisible(); })" />
                    </div>
                </div>
            </div>


            <div class="card list-group">
                <div class="card-body">
                    <h5 class="card-title">Description</h5>
                    <div @onclick="@((e) => SetEnabled(e, Property.Description))"
                         @onfocusout="@((e) => SetDisabled(e, Property.Description))">
                        <textarea id="description"
                                  class="card-text form-control"
                                  disabled="@IsDescriptionDisabled"
                                  rows="@DescriptionLinesNumber"
                                  value="@Course.Description"
                                  @onchange="@((e) => {Course.Description = e.Value.ToString();  SetEditButtonVisible(); })" />
                    </div>
                </div>
            </div>

            <div class="form-row">
                <input class="list-inline-item list-group-item col-auto" disabled value="@Course.Created.ToShortDateString()" />
                @if (ShowEditButton)
                {
                    <button class="btn btn-info list-inline-item col-auto" type="submit">Edit course</button>
                }
                <button class="btn btn-danger list-inline-item col-auto" @onclick=@(async () => await DeleteCourse())>Delete Course</button>
            </div>
        </div>
    </EditForm>

    @if (Course.Tasks != null && Course.Tasks.Count() != 0)
    {
        <br />
        <br />
        <h4>Tasks to do</h4>
        <TableGrid Items="@Course.Tasks" PageSize="5">
            <GridHeader>
                <th>Name</th>
                <th>Description</th>
                <th>Created</th>
            </GridHeader>
            <GridRow>
                <td class="text-truncate">@context.Name</td>
                <td class="text-truncate">@context.Description</td>
                <td class="text-truncate">@context.Created.ToShortDateString()</td>
            </GridRow>
        </TableGrid>
        <br />
    }
    <h4>Create new task</h4>
    <EditForm Model="@TaskForCreation" OnValidSubmit="@(async () => await AddTask())">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group row">
            <label for="name" class="col-sm-2 col-form-label">Name</label>
            <div class="col-sm-8">
                <input type="text"
                       class="form-control"
                       id="task_name"
                       placeholder="Name"
                       @bind="@TaskForCreation.Name" />
            </div>
        </div>
        <div class="form-group row">
            <label for="description" class="col-sm-2 col-form-label">Description</label>
            <div class="col-sm-8">
                <input type="text"
                       class="form-control"
                       id="task_description"
                       placeholder="Description"
                       rows="3"
                       @bind="@TaskForCreation.Description" />
            </div>
        </div>

        <button class="btn btn-info" type="submit">Add task</button>
    </EditForm>

    @if (Course.Classes != null && Course.Classes.Count() != 0)
    {
        <br />
        <br />
        <h4>Linked classes</h4>
        <TableGrid Items="@Course.Classes" PageSize="5">
            <GridHeader>
                <th>Name</th>
                <th>Description</th>
                <th>Created</th>
            </GridHeader>
            <GridRow>
                <td class="text-truncate">@context.Name</td>
                <td class="text-truncate">@context.Description</td>
                <td class="text-truncate">@context.Created.ToShortDateString()</td>
            </GridRow>
        </TableGrid>
    }
}
