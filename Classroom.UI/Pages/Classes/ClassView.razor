@using Classroom.UI.Common.Components

@inherits ClassLogic
@page "/classes/{id:guid}"

@if (Class is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h2>
        Class "@Class.Name"
    </h2>

    <EditForm Model="@Class" OnValidSubmit="@(async () => await EditClass())">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="list-group list-group-flush">

            <div class="card list-group">
                <div class="card-body">
                    <h5 class="card-title">Name</h5>
                    <div onclick="@((e) => SetEnabled(e, Property.Name))"
                         onfocusout="@((e) => SetDisabled(e, Property.Name))">
                        <input id="name"
                               class="card-text form-control"
                               disabled="@IsNameDisabled"
                               value="@Class.Name"
                               onchange="@((e) => {@Class.Name = e.Value.ToString();  SetEditButtonVisible(); })" />
                    </div>
                </div>
            </div>


            <div class="card list-group">
                <div class="card-body">
                    <h5 class="card-title">Description</h5>
                    <div onclick="@((e) => SetEnabled(e, Property.Description))"
                         onfocusout="@((e) => SetDisabled(e, Property.Description))">
                        <textarea id="description"
                                  class="card-text form-control"
                                  disabled="@IsDescriptionDisabled"
                                  rows="@DescriptionLinesNumber"
                                  value="@Class.Description"
                                  onchange="@((e) => {@Class.Description = e.Value.ToString();  SetEditButtonVisible(); })" />
                    </div>
                </div>
            </div>

            <input class="list-group-item" disabled value="@Class.Created.ToShortDateString()" />
        </div>

        @if (ShowEditButton)
        {
            <button class="btn btn-info" type="submit">Edit class</button>
        }
        <button class="btn pagebutton btn-danger" onclick=@(async () => await DeleteClass())>Delete Class</button>
    </EditForm>
    @if (@Class.Courses != null && @Class.Courses.Count() != 0)
    {
        <br />
        <br />
        <h4>Courses</h4>
        <TableGrid Items="@Class.Courses" PageSize="5">
            <GridHeader>
                <th>Name</th>
                <th>Description</th>
                <th>Created</th>
            </GridHeader>
            <GridRow>
                <td class="text-truncate">@context.Name</td>
                <td class="text-truncate">@context.Description</td>
                <td class="text-truncate">@context.Created.ToShortDateString()</td>
            </GridRow>
        </TableGrid>
    }
}
